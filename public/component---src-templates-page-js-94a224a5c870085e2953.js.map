{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["BlogPostTemplate","data","pageContext","markdownRemark","frontmatter","title","date","path","author","coverImage","excerpt","tags","autoExcerpt","id","html","next","previous","description","key","previousPost","nextPost","propTypes","PropTypes","object","isRequired","shape"],"mappings":"2FAAA,yFAQMA,EAAmB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChC,EAKID,EAAKE,eALT,IACEC,YAAeC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,KAAMC,EAD9B,EAC8BA,KAAMC,EADpC,EACoCA,OAAQC,EAD5C,EAC4CA,WAAYC,EADxD,EACwDA,QAASC,EADjE,EACiEA,KACtDC,EAFX,EAEEF,QACAG,EAHF,EAGEA,GACAC,EAJF,EAIEA,KAEMC,EAAmBb,EAAnBa,KAAMC,EAAad,EAAbc,SAEd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAOA,EAAOY,YAAaP,GAAWE,IAC3C,kBAAC,IAAD,CACEM,IAAKL,EACLR,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZK,KAAMA,EACNH,KAAMA,EACNQ,aAAcH,EACdI,SAAUL,MAMHf,YAEfA,EAAiBqB,UAAY,CAC3BpB,KAAMqB,IAAUC,OAAOC,WACvBtB,YAAaoB,IAAUG,MAAM,CAC3BV,KAAMO,IAAUC,OAChBP,SAAUM,IAAUC","file":"component---src-templates-page-js-94a224a5c870085e2953.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const {\n    frontmatter: { title, date, path, author, coverImage, excerpt, tags },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark\n  const { next, previous } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt || autoExcerpt} />\n      <Post\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        author={author}\n        coverImage={coverImage}\n        html={html}\n        tags={tags}\n        previousPost={previous}\n        nextPost={next}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    next: PropTypes.object,\n    previous: PropTypes.object,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        path\n        author\n        excerpt\n        tags\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`\n"],"sourceRoot":""}