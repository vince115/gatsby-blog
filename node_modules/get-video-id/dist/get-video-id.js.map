{"version":3,"file":"get-video-id.js","sources":["../node_modules/get-src/index.js","../src/utils/strip-parameters.js","../src/youtube.js","../src/vimeo.js","../src/vine.js","../src/videopress.js","../src/microsoftstream.js","../src/index.js"],"sourcesContent":["'use strict';\nmodule.exports = function (input) {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError('get-src expected a string');\n\t}\n\tvar re = /src=\"(.*?)\"/gm;\n\tvar url = re.exec(input);\n\n\tif (url && url.length >= 2) {\n\t\treturn url[1];\n\t}\n};\n","/**\n * Strip away any parameters following `?` or `/` or '&'\n * @param str\n * @returns {String}\n */\nexport default function stripParameters(str) {\n  // Split parameters or split folder separator\n  if (str.indexOf('?') > -1) {\n    return str.split('?')[0];\n  } if (str.indexOf('/') > -1) {\n    return str.split('/')[0];\n  } if (str.indexOf('&') > -1) {\n    return str.split('&')[0];\n  }\n  return str;\n}\n","import stripParameters from './utils/strip-parameters';\n\n/**\n * Get the Youtube Video id.\n * @param {string} youtubeStr - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function youtube(youtubeStr) {\n  let str = youtubeStr;\n\n  // remove time hash at the end of the string\n  str = str.replace(/#t=.*$/, '');\n\n  // shortcode\n  const shortcode = /youtube:\\/\\/|https?:\\/\\/youtu\\.be\\/|http:\\/\\/y2u\\.be\\//g;\n\n  if (shortcode.test(str)) {\n    const shortcodeid = str.split(shortcode)[1];\n    return stripParameters(shortcodeid);\n  }\n\n  // /v/ or /vi/\n  const inlinev = /\\/v\\/|\\/vi\\//g;\n\n  if (inlinev.test(str)) {\n    const inlineid = str.split(inlinev)[1];\n    return stripParameters(inlineid);\n  }\n\n  // v= or vi=\n  const parameterv = /v=|vi=/g;\n\n  if (parameterv.test(str)) {\n    const arr = str.split(parameterv);\n    return stripParameters(arr[1].split('&')[0]);\n  }\n\n  // v= or vi=\n  const parameterwebp = /\\/an_webp\\//g;\n\n  if (parameterwebp.test(str)) {\n    const webp = str.split(parameterwebp)[1];\n    return stripParameters(webp);\n  }\n\n  // embed\n  const embedreg = /\\/embed\\//g;\n\n  if (embedreg.test(str)) {\n    const embedid = str.split(embedreg)[1];\n    return stripParameters(embedid);\n  }\n\n  // ignore /user/username pattern\n  const usernamereg = /\\/user\\/([a-zA-Z0-9]*)$/g;\n\n  if (usernamereg.test(str)) {\n    return undefined;\n  }\n\n  // user\n  const userreg = /\\/user\\/(?!.*videos)/g;\n\n  if (userreg.test(str)) {\n    const elements = str.split('/');\n    return stripParameters(elements.pop());\n  }\n\n  // attribution_link\n  const attrreg = /\\/attribution_link\\?.*v%3D([^%&]*)(%26|&|$)/;\n\n  if (attrreg.test(str)) {\n    return stripParameters(str.match(attrreg)[1]);\n  }\n\n  return undefined;\n}\n","/**\n * Get the vimeo id.\n * @param {string} vimeoStr - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function vimeo(vimeoStr) {\n  let str = vimeoStr;\n\n  if (str.indexOf('#') > -1) {\n    [str] = str.split('#');\n  }\n\n  if (str.indexOf('?') > -1 && str.indexOf('clip_id=') === -1) {\n    [str] = str.split('?');\n  }\n\n  let id;\n  let arr;\n\n  const primary = /https?:\\/\\/vimeo\\.com\\/([0-9]+)/;\n\n  const matches = primary.exec(str);\n  if (matches && matches[1]) {\n    return matches[1];\n  }\n\n  const vimeoPipe = [\n    'https?://player.vimeo.com/video/[0-9]+$',\n    'https?://vimeo.com/channels',\n    'groups',\n    'album',\n  ].join('|');\n\n  const vimeoRegex = new RegExp(vimeoPipe, 'gim');\n\n  if (vimeoRegex.test(str)) {\n    arr = str.split('/');\n    if (arr && arr.length) {\n      id = arr.pop();\n    }\n  } else if (/clip_id=/gim.test(str)) {\n    arr = str.split('clip_id=');\n    if (arr && arr.length) {\n      [id] = arr[1].split('&');\n    }\n  }\n\n  return id;\n}\n","/**\n * Get the vine id.\n * @param {string} str - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function vine(str) {\n  const regex = /https:\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]*)\\/?/;\n  const matches = regex.exec(str);\n  return matches && matches[1];\n}\n","/**\n * Get the VideoPress id.\n * @param {string} str - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function videopress(str) {\n  let idRegex;\n\n  if (str.indexOf('embed') > -1) {\n    idRegex = /embed\\/(\\w{8})/;\n    return str.match(idRegex)[1];\n  }\n\n  idRegex = /\\/v\\/(\\w{8})/;\n\n  const match = str.match(idRegex);\n\n  if (match && match.length > 0) {\n    return str.match(idRegex)[1];\n  }\n\n  return undefined;\n}\n","/**\n * Get the Microsoft Stream id.\n * @param {string} str - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function microsoftStream(str) {\n  const regex = (str.indexOf('embed') > -1)\n    ? /https:\\/\\/web\\.microsoftstream\\.com\\/embed\\/video\\/([a-zA-Z0-9-]*)\\/?/\n    : /https:\\/\\/web\\.microsoftstream\\.com\\/video\\/([a-zA-Z0-9-]*)\\/?/;\n  const matches = regex.exec(str);\n  return matches && matches[1];\n}\n","import getSrc from 'get-src';\nimport youtube from './youtube';\nimport vimeo from './vimeo';\nimport vine from './vine';\nimport videopress from './videopress';\nimport microsoftStream from './microsoftstream';\n\n/**\n * Get the id and service from a video url.\n * @param {String} videoStr - the url from which you want to extract the id\n * @returns {Object}\n */\nfunction getVideoId(videoStr) {\n  if (typeof videoStr !== 'string') {\n    throw new TypeError('get-video-id expects a string');\n  }\n\n  let str = videoStr;\n\n  if (/<iframe/gi.test(str)) {\n    str = getSrc(str);\n  }\n\n  // remove surrounding whitespaces or linefeeds\n  str = str.trim();\n\n  // remove the '-nocookie' flag from youtube urls\n  str = str.replace('-nocookie', '');\n\n  // remove any leading `www.`\n  str = str.replace('/www.', '/');\n\n  let metadata = {\n    id: null,\n    service: null,\n  };\n\n  // Try to handle google redirection uri\n  if (/\\/\\/google/.test(str)) {\n    // Find the redirection uri\n    const matches = str.match(/url=([^&]+)&/);\n\n    // Decode the found uri and replace current url string - continue with final link\n    if (matches) {\n      // JavaScript can get encoded URI\n      str = decodeURIComponent(matches[1]);\n    }\n  }\n\n  if (/youtube|youtu\\.be|y2u\\.be|i.ytimg\\./.test(str)) {\n    metadata = {\n      id: youtube(str),\n      service: 'youtube',\n    };\n  } else if (/vimeo/.test(str)) {\n    metadata = {\n      id: vimeo(str),\n      service: 'vimeo',\n    };\n  } else if (/vine/.test(str)) {\n    metadata = {\n      id: vine(str),\n      service: 'vine',\n    };\n  } else if (/videopress/.test(str)) {\n    metadata = {\n      id: videopress(str),\n      service: 'videopress',\n    };\n  } else if (/microsoftstream/.test(str)) {\n    metadata = {\n      id: microsoftStream(str),\n      service: 'microsoftstream',\n    };\n  }\n  return metadata;\n}\n\nexport default getVideoId;\n"],"names":["stripParameters","str","indexOf","split","youtube","youtubeStr","replace","shortcode","test","shortcodeid","inlinev","inlineid","parameterv","arr","parameterwebp","webp","embedreg","embedid","usernamereg","undefined","userreg","elements","pop","attrreg","match","vimeo","vimeoStr","id","primary","matches","exec","vimeoPipe","join","vimeoRegex","RegExp","length","vine","regex","videopress","idRegex","microsoftStream","getVideoId","videoStr","TypeError","getSrc","trim","metadata","service","decodeURIComponent"],"mappings":"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"}