{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","pageContext","nextPagePath","previousPagePath","posts","allMarkdownRemark","edges","map","node","id","autoExcerpt","excerpt","frontmatter","title","date","path","author","coverImage","tags","key","previousPath","previousLabel","nextPath","nextLabel","propTypes","PropTypes","object","isRequired","shape","string"],"mappings":"0MAQMA,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAA4D,IAAtDC,YAAeC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,iBAEpBC,EAC1BJ,EADFK,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEVC,EAWED,EAXFC,GACSC,EAUPF,EAVFG,QAFF,EAYIH,EATFI,YACEC,EAJJ,EAIIA,MACAC,EALJ,EAKIA,KACAC,EANJ,EAMIA,KACAC,EAPJ,EAOIA,OACAC,EARJ,EAQIA,WACAN,EATJ,EASIA,QACAO,EAVJ,EAUIA,KAIJ,OACE,kBAAC,IAAD,CACEC,IAAKV,EACLI,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZC,KAAMA,EACNP,QAASA,GAAWD,OAK1B,kBAAC,IAAD,CACEU,aAAcjB,EACdkB,cAAc,cACdC,SAAUpB,EACVqB,UAAU,mBAOpBxB,EAAMyB,UAAY,CAChBxB,KAAMyB,IAAUC,OAAOC,WACvB1B,YAAawB,IAAUG,MAAM,CAC3B1B,aAAcuB,IAAUI,OACxB1B,iBAAkBsB,IAAUI,UAqCjB9B","file":"component---src-templates-index-js-d602da39e24af6e63f0d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Navigation from '../components/navigation'\n\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        {posts.map(({ node }) => {\n          const {\n            id,\n            excerpt: autoExcerpt,\n            frontmatter: {\n              title,\n              date,\n              path,\n              author,\n              coverImage,\n              excerpt,\n              tags,\n            },\n          } = node\n\n          return (\n            <Post\n              key={id}\n              title={title}\n              date={date}\n              path={path}\n              author={author}\n              coverImage={coverImage}\n              tags={tags}\n              excerpt={excerpt || autoExcerpt}\n            />\n          )\n        })}\n\n        <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        />\n      </Layout>\n    </>\n  )\n}\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            author\n            excerpt\n            tags\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n"],"sourceRoot":""}